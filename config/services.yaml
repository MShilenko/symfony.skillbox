# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.cache_time: '%env(int:CACHE_TIME)%' # env - взять переменную окружения(файл .env и т.п.), int: - синтаксис объявления типа переменной.
    cache_adapter: cache.adapter.redis
    article_uploads: 'uploads/articles'
    article_uploads_url: '%env(SITE_URL)%/%article_uploads%'

    # Article Image
    app.article_image:
        min_width: '%env(int:ARTICLE_IMAGE_MIN_WIDTH)%'
        min_height: '%env(int:ARTICLE_IMAGE_MIN_HEIGHT)%'
        max_size: '%env(string:ARTICLE_IMAGE_MAX_SIZE)%'
        allow_portrait: '%env(bool:ARTICLE_IMAGE_ALLOW_PORTRAIT)%'
    # /Article Image

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $debug: '%kernel.debug%'
            $markArticle: '%env(string:MARK_ARTICLE_WORDS_WITH_BOLD)%'

            League\Flysystem\FilesystemOperator $articlesFilesystem: '@oneup_flysystem.uploads_articles_filesystem'
            # App\Service\FileUploader $articleFileUploader: '@file_uploader.article'
            # App\Service\FileUploader $avatarFileUploader: '@file_uploader.avatar'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # App\Service\MarkdownParser:
    #     arguments: 
    #         $logger: '@monolog.logger.markdown'

    # file_uploader.article: 
    #     class: App\Service\FileUploader
    #     arguments: 
    #         $uploadsPath: '%article_uploads_dir%'
    # file_uploader.avatar:
    #     class: App\Service\FileUploader
    #     arguments: 
    #         $uploadsPath: '/path/to/avatar'